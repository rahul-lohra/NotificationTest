ext {
    def nav_version = "2.5.1"

    navigation = [
            fragment     : "androidx.navigation:navigation-fragment-ktx:$nav_version",
            ui           : "androidx.navigation:navigation-ui-ktx:$nav_version",
            featureModule: "androidx.navigation:navigation-dynamic-features-fragment:$nav_version",
            testing      : "androidx.navigation:navigation-testing:$nav_version",
            compose      : "androidx.navigation:navigation-compose:$nav_version",
    ]

    def dagger = '2.43.2'
    di = [
            dagger        : "com.google.dagger:dagger:$dagger",
            daggerCompiler: "com.google.dagger:dagger-compiler:$dagger"
    ]

    def okHttp = '4.10.0'
    def retrofit = '2.9.0'
    network = [
            okhttp        : "com.squareup.okhttp3:okhttp:$okHttp",

            retrofit      : "com.squareup.retrofit2:retrofit:$retrofit",
            converterGson : "com.squareup.retrofit2:converter-gson:$retrofit",
            converterMoshi: "com.squareup.retrofit2:converter-moshi:$retrofit",
    ]

    def ktx = "1.8.0"
    def appcompat = "1.4.2"
    def constraintlayout = "2.1.4"
    def lifecycler_viewmodel_ktx = "2.5.1"
    def recyclerview = "1.2.1"
    androidx = [
            coreKtx               : "androidx.core:core-ktx:$ktx",
            appcompat             : "androidx.appcompat:appcompat:$appcompat",
            constraintlayout      : "androidx.constraintlayout:constraintlayout:$constraintlayout",
            lifecyclerViewmodelKtx: "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycler_viewmodel_ktx",
            recyclerview          : "androidx.recyclerview:recyclerview:$recyclerview",
    ]

    def junit = "4.13.2"
    unitTesting = [
            junit: "junit:junit:$junit"
    ]

    def espresso = '3.4.0'
    def androidx_junit = '1.1.3'
    uiTesting = [
            espressoContrib: "androidx.test.espresso:espresso-contrib:$espresso",
            espressoCore   : "androidx.test.espresso:espresso-core:$espresso",
            espressoIntents: "androidx.test.espresso:espresso-intents:$espresso",

            androidXJUnit: "androidx.test.ext:junit:$androidx_junit",
    ]

    def chucker = '3.4.0'
    devTools = [
            chucker    : "com.github.ChuckerTeam.Chucker:library:$chucker",
            chuckerNoOp: "com.github.ChuckerTeam.Chucker:library-no-op:$chucker",
    ]

    def moshi = "1.13.0"
    parsers = [
            moshiKotlin       : "com.squareup.moshi:moshi-kotlin:$moshi",
            moshiKotlinCodegen: "com.squareup.moshi:moshi-kotlin-codegen:$moshi",
    ]

    def coroutines = "1.6.4"
    jetbrains = [
            coroutinesCore: "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines",
    ]

    def compose = "1.1.1"
    jetpackCompose = [
            composeUi: "androidx.compose.ui:ui:$compose",

            preview: "androidx.compose.ui:ui-tooling:$compose",

            foundation: "androidx.compose.foundation:foundation:$compose",

            materialDesign:"androidx.compose.material:material:$compose",
            materialDesignIcons:"androidx.compose.material:material-icons-core:$compose",
            materialDesignIconsExtended:"androidx.compose.material:material-icons-extended:$compose",

            composeLiveData:"androidx.compose.runtime:runtime-livedata:$compose",

            composeUiTest:"androidx.compose.ui:ui-test-junit4:$compose"
    ]
}